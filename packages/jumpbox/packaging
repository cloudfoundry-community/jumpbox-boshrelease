#!/bin/bash
set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Detect # of CPUs so make jobs can be parallelized
CPUS=$(grep -c ^processor /proc/cpuinfo)
 # Available variables
# $BOSH_COMPILE_TARGET - where this package & spec'd source files are available
# $BOSH_INSTALL_TARGET - where you copy/install files to be included in package
export HOME=/var/vcap
n=0 # how many jobs have we spun in parallel?

cp -a jumpbox/setup ${BOSH_INSTALL_TARGET}/setup
chmod 0755 ${BOSH_INSTALL_TARGET}/setup

mkdir ${BOSH_INSTALL_TARGET}/bin
cp -a jumpbox/bins/* ${BOSH_INSTALL_TARGET}/bin
cp -a jumpbox/cloudfoundry-utils/* ${BOSH_INSTALL_TARGET}/bin
chmod 0755 ${BOSH_INSTALL_TARGET}/bin/*

# GIT
# https://www.kernel.org/pub/software/scm/git
# https://www.kernel.org/pub/software/scm/git/git-2.35.7.tar.gz
(tar -xzvf jumpbox/git-2.35.7.tar.gz
 cd git-2.35.7
 ./configure --prefix=${BOSH_INSTALL_TARGET}
 make -j${CPUS} all
 make install) &
n=$((n + 1))

# TMUX
# http://libevent.org/
# https://github.com/libevent/libevent/releases/download/release-2.1.11-stable/libevent-2.1.11-stable.tar.gz
# https://tmux.github.io/
# https://github.com/tmux/tmux/releases/download/3.0a/tmux-3.0a.tar.gz
(tar -xzvf jumpbox/libevent-2.1.12-stable.tar.gz
 (cd libevent-2.1.12-stable
  ./configure --prefix=/usr --disable-shared
  make -j${CPUS}
  make install)

 tar -xzvf jumpbox/tmux-3.2a.tar.gz
 cd tmux-3.2a
 ./configure --prefix=${BOSH_INSTALL_TARGET} \
             --enable-static
 sed -i 's@#define TMUX_CONF.*@#define TMUX_CONF "'${BOSH_INSTALL_TARGET}'/etc/tmux.conf"@' tmux.h
 make -j${CPUS}
 make install) &
n=$((n + 1))

# TREE
# http://mama.indstate.edu/users/ice/tree/
# ftp://mama.indstate.edu/linux/tree/tree-2.0.2.tgz
(tar -xzvf jumpbox/tree-2.0.2.tar.gz
 cd tree-2.0.2
 sed -i "s|^PREFIX=.*|PREFIX=${BOSH_INSTALL_TARGET}|" Makefile
 make -j${CPUS}
 make install) &
n=$((n + 1))

# VIM
# http://github.com/vim/vim/releases
(tar -xzvf jumpbox/vim-8.2.4528.tar.gz
 cd vim-8.2.4528
 ./configure --prefix=${BOSH_INSTALL_TARGET}
 make -j${CPUS}
 make install) &
n=$((n + 1))

# WGET
# http://ftp.gnu.org/gnu/wget/
# https://ftp.gnu.org/gnu/wget/wget-1.21.3.tar.gz
(tar -xzvf jumpbox/wget-1.21.3.tar.gz
 cd wget-1.21.3
 OPENSSL_CFLAGS=" " OPENSSL_LIBS="-lssl -lcrypto" ./configure --prefix=${BOSH_INSTALL_TARGET} --with-ssl=openssl
 make -j${CPUS}
 make install) &
n=$((n + 1))

# S3CMD
# https://github.com/s3tools/s3cmd/releases/download/v2.4.0/s3cmd-2.4.0.tar.gz
# Offline install using vendored wheels
(python3 jumpbox/get-pip.py --no-index --find-links=jumpbox/wheels
 export PATH=$HOME/.local/bin:$PATH
 tar -xzvf jumpbox/s3cmd-2.4.0.tar.gz
 cd s3cmd-2.4.0
 pip install . --prefix=${BOSH_INSTALL_TARGET} \
   --no-index \
   --find-links=../jumpbox/wheels) &
n=$((n + 1))

while [[ $n -gt 0 ]]; do
	wait -n
	n=$((n - 1))
done

cp jumpbox/vimrc     ${BOSH_INSTALL_TARGET}/share/vim/vimrc
cp jumpbox/tmux.conf ${BOSH_INSTALL_TARGET}/etc/tmux.conf
